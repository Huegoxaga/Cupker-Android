type Session @model @auth(rules: [{ allow: owner }]) {
  id: ID!
  name: String!
  roaster: Roaster @connection(fields: ["roasterID"])
  roasterID: ID!
  roast_time: AWSDateTime!
  samples: [Sample] @connection(keyName: "bySession", fields: ["id"])
}

type Bean @model @auth(rules: [{ allow: owner }]) {
  id: ID!
  flavors: [Flavor] @connection(keyName: "byBean", fields: ["id"])
  name: String
  process: String
  origin: String
  region: String
  altitude_low: String
  altitude_high: String
  moisture: String
  variety: String
  density: String
  grade: String
  image: String
  dealer: Dealer @connection
}

type Sample @model @auth(rules: [{ allow: owner }])
  @key(name: "bySession", fields: ["sessionID"]) {
  id: ID!
  sessionID: ID!
  bean: Bean @connection
  roast_level: Float
  aroma: Float
  flavor: Float
  acidity: Float
  overall: Float
  body: Float
  balance: Float
  uniformity: Float
  clean_cup: Float
  after_taste: Float
  sweetness: Float
  defect_type: Float
  defect_count: Float
  notes: String
}

type Roaster @model @auth(rules: [{ allow: owner }]) {
  id: ID!
  name: String
  email: AWSEmail
}

type Flavor @model @auth(rules: [{ allow: owner }])
  @key(name: "byBean", fields: ["beanID"]) {
  id: ID!
  beanID: ID!
  name: String
  type: String
}

type Dealer @model @auth(rules: [{ allow: owner }]) {
  id: ID!
  name: String!
  email: AWSEmail!
}